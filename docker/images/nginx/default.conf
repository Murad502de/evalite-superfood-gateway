# Настройки CORS
add_header 'Access-Control-Allow-Origin' '*' always;
add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

# Обработка OPTIONS
if ($request_method = 'OPTIONS') {
    return 204;
}

# Обработка ошибок CORS
error_page 403 = @error403;
location @error403 {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    add_header Content-Length 0;
    add_header Content-Type text/plain;
    return 204;
}

# https://bjornjohansen.no/redirect-to-https-with-nginx
# TODO dev
# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     server_name _;

#     location ^~ /.well-known/acme-challenge {
#         root /var/www/certbot;
#         try_files $uri =404;
#     }
#     return 301 https://$host$request_uri;
# }
server {
    # TODO dev
    # listen 443 ssl;
    # listen [::]:443 default_server;

    # TODO local
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    location ^~ /.well-known/acme-challenge {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # HSTS, nice ...
    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    # certbot places files in /etc/letsencrypt/live/mydomain.net/...
    # need to use some variables here ...
    # note: android chrome needs the full chain

    # TODO dev
    # ssl_certificate /etc/letsencrypt/live/itwelt.ru/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/itwelt.ru/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ## better ssl test?
    ## https://blog.qualys.com/ssllabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # TODO dev
    # ssl_protocols TLSv1.2 TLSv1.3;
    ## ssl_prefer_server_ciphers on;
    # ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 #EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    root /var/www/html/public;
    index index.php;
    access_log /var/log/nginx/frontend-access.log combined;
    error_log /var/log/nginx/frontend-error.log warn;

    location / {
        location /api {
            root /var/www/html/public;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location /pdf {
            root /var/www/html/public;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location /css {
            root /var/www/html/public;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location /fonts {
            root /var/www/html/public;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location /storage {
            root /var/www/html/public;
            index index.php;
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location / {
            root /var/www/html/public/dist;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Redirect everything that isn't a real file to index.php
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location /wordpress/ {
        rewrite ^/wordpress(.*)$ $1 permanent;
    }

    # deny accessing php files for the /assets directory
    location ~ ^/assets/.*\.php$ {
        deny all;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # FIXME
        fastcgi_pass evalite-refsys-app:9000;
        try_files $uri =404;
        fastcgi_read_timeout 900;
    }

    location ~* /\. {
        deny all;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    client_max_body_size 20M;
}